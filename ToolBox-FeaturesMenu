-- L·∫•y c√°c d·ªãch v·ª• c·∫ßn thi·∫øt
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local lp = Players.LocalPlayer -- Ng∆∞·ªùi ch∆°i hi·ªán t·∫°i
local guiParent = lp:WaitForChild("PlayerGui") -- GUI g·ªëc ƒë·ªÉ ch·ª©a ScreenGui

-- Xo√° GUI c≈© n·∫øu t·ªìn t·∫°i
if guiParent:FindFirstChild("CustomToolboxUI") then
	guiParent.CustomToolboxUI:Destroy()
end

-- T·∫°o m·ªôt ScreenGui m·ªõi
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CustomToolboxUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = guiParent

-- Danh s√°ch c√°c t√≠nh nƒÉng
local features = {
	["Ragdoll"] = false,
	["Fling"] = false,
	["Speed x1.5"] = false,
	["Noclip"] = false,
	["Fly"] = false,
}

local defaultSpeed = 16
local currentTab = "Player"

-- N√∫t toggle menu
local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "MenuToggle"
toggleBtn.Text = "üõ†Ô∏è"
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 18
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleBtn.BorderSizePixel = 0
toggleBtn.Size = UDim2.new(0, 50, 0, 50)
toggleBtn.Position = UDim2.new(0, 10, 0, 10)
toggleBtn.Active = true
toggleBtn.Draggable = true
toggleBtn.ZIndex = 5
toggleBtn.AutoButtonColor = false
toggleBtn.ClipsDescendants = true
toggleBtn.Parent = screenGui

Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(1, 0)

-- Frame menu ch√≠nh
local menu = Instance.new("Frame")
menu.Name = "MenuContainer"
menu.Size = UDim2.new(1, 0, 1, 0)
menu.Position = UDim2.new(0, 0, 0, 0)
menu.BackgroundTransparency = 1
menu.Visible = false
menu.ZIndex = 4
menu.Parent = screenGui

-- Tab List
local tabList = Instance.new("Frame")
tabList.Size = UDim2.new(0, 160, 1, 0)
tabList.Position = UDim2.new(0, 0, 0, 0)
tabList.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
tabList.BackgroundTransparency = 0.6
tabList.BorderSizePixel = 0
tabList.Parent = menu

local tabLayout = Instance.new("UIListLayout")
tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabLayout.Padding = UDim.new(0, 8)
tabLayout.Parent = tabList

-- Tab Player
local playerTab = Instance.new("TextButton")
playerTab.Size = UDim2.new(1, 0, 0, 40)
playerTab.Text = "Player"
playerTab.Font = Enum.Font.SourceSans
playerTab.TextSize = 18
playerTab.TextColor3 = Color3.new(1, 1, 1)
playerTab.BackgroundTransparency = 1
playerTab.BorderSizePixel = 0
playerTab.Name = "PlayerTab"
playerTab.Parent = tabList

local playerDivider = Instance.new("Frame")
playerDivider.Size = UDim2.new(1, 0, 0, 1)
playerDivider.BackgroundColor3 = Color3.new(1, 1, 1)
playerDivider.BackgroundTransparency = 0.6
playerDivider.BorderSizePixel = 0
playerDivider.Parent = tabList

-- Tab World
local worldTab = Instance.new("TextButton")
worldTab.Size = UDim2.new(1, 0, 0, 40)
worldTab.Text = "World"
worldTab.Font = Enum.Font.SourceSans
worldTab.TextSize = 18
worldTab.TextColor3 = Color3.new(1, 1, 1)
worldTab.BackgroundTransparency = 1
worldTab.BorderSizePixel = 0
worldTab.Name = "WorldTab"
worldTab.Parent = tabList

local worldDivider = Instance.new("Frame")
worldDivider.Size = UDim2.new(1, 0, 0, 1)
worldDivider.BackgroundColor3 = Color3.new(1, 1, 1)
worldDivider.BackgroundTransparency = 0.6
worldDivider.BorderSizePixel = 0
worldDivider.Parent = tabList

-- Danh s√°ch t√≠nh nƒÉng
local featureList = Instance.new("Frame")
featureList.Size = UDim2.new(0, 160, 1, 0)
featureList.Position = UDim2.new(1, -160, 0, 0)
featureList.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
featureList.BackgroundTransparency = 0.6
featureList.BorderSizePixel = 0
featureList.Name = "FeatureList"
featureList.Parent = menu

local featurePadding = Instance.new("UIPadding")
featurePadding.PaddingLeft = UDim.new(0, 35)
featurePadding.PaddingTop = UDim.new(0, 15)
featurePadding.Parent = featureList

local featureLayout = Instance.new("UIListLayout")
featureLayout.SortOrder = Enum.SortOrder.LayoutOrder
featureLayout.Padding = UDim.new(0, 10)
featureLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
featureLayout.VerticalAlignment = Enum.VerticalAlignment.Top
featureLayout.Parent = featureList

-- H√†m l·∫•y nh√¢n v·∫≠t
local function getChar()
	return lp.Character or lp.CharacterAdded:Wait()
end

-- T·∫°o n√∫t t√≠nh nƒÉng
local function makeBtn(name, order, callback)
	local btn = Instance.new("TextButton")
	btn.Name = name
	btn.Size = UDim2.new(1, -20, 0, 35)
	btn.LayoutOrder = order
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.BackgroundTransparency = 1
	btn.BorderSizePixel = 0
	btn.TextXAlignment = Enum.TextXAlignment.Left
	btn.Text = "   " .. name .. ": ‚ùå"
	btn.Parent = featureList

	btn.MouseButton1Click:Connect(function()
		features[name] = not features[name]
		btn.Text = "   " .. name .. ": " .. (features[name] and "‚úÖ" or "‚ùå")
		callback(features[name])
	end)
end

-- Ragdoll
makeBtn("Ragdoll", 1, function(on)
	local c = getChar()
	local hum = c:FindFirstChildOfClass("Humanoid")
	if not hum then return end
	if on then
		hum:ChangeState(Enum.HumanoidStateType.Physics)
		hum.PlatformStand = true
		for _, part in ipairs(c:GetChildren()) do
			if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
				part.Anchored = false
				part.CanCollide = true
			end
		end
	else
		hum:ChangeState(Enum.HumanoidStateType.GettingUp)
		hum.PlatformStand = false
		hum:Move(Vector3.zero, false)
	end
end)

-- Fling
local flingActive = false
makeBtn("Fling", 2, function(on)
	flingActive = on
	if flingActive then
		coroutine.wrap(function()
			local movel = 0.1
			while flingActive do
				RunService.Heartbeat:Wait()
				local hrp = getChar():FindFirstChild("HumanoidRootPart")
				if hrp then
					local vel = hrp.Velocity
					hrp.Velocity = vel * 10000 + Vector3.new(0, 10000, 0)
					RunService.RenderStepped:Wait()
					hrp.Velocity = vel
					RunService.Stepped:Wait()
					hrp.Velocity = vel + Vector3.new(0, movel, 0)
					movel = -movel
				end
			end
		end)()
	end
end)

-- Speed x1.5
makeBtn("Speed x1.5", 3, function(on)
	local hum = getChar():FindFirstChildOfClass("Humanoid")
	if hum then
		hum.WalkSpeed = on and defaultSpeed * 1.5 or defaultSpeed
	end
end)

-- Noclip
local noclipConn
makeBtn("Noclip", 4, function(on)
	local char = getChar()

	if on then
		noclipConn = RunService.Stepped:Connect(function()
			for _, v in pairs(char:GetDescendants()) do
				if v:IsA("BasePart") then
					v.CanCollide = false
				end
			end
		end)
	else
		if noclipConn then
			noclipConn:Disconnect()
			noclipConn = nil
		end
		for _, v in pairs(char:GetDescendants()) do
			if v:IsA("BasePart") then
				v.CanCollide = true
			end
		end
	end
end)

-- Logic: Fly
local uis = game:GetService("UserInputService")
local flying = false
local flyConn = nil
local controls = {
	Forward = false,
	Backward = false,
	Left = false,
	Right = false
}
local flySpeed = 2

makeBtn("Fly", 4, function(on)
	local chr = getChar()
	local hrp = chr:WaitForChild("HumanoidRootPart")
	local hum = chr:FindFirstChildOfClass("Humanoid")
	if not hum then return end

	flying = on
	hum.PlatformStand = flying

	-- T·∫Øt ho·∫°t ·∫£nh n·∫øu c√≥
	local animate = chr:FindFirstChild("Animate")
	if animate then
		animate.Disabled = flying
	end
	for _, track in ipairs(hum:GetPlayingAnimationTracks()) do
		track:Stop()
	end

	if flying then
		flyConn = RunService.RenderStepped:Connect(function()
			local cam = workspace.CurrentCamera
			local lv = cam.CFrame.LookVector
			local rv = cam.CFrame.RightVector
			local moveDir = Vector3.zero

			if controls.Forward then moveDir += lv end
			if controls.Backward then moveDir -= lv end
			if controls.Left then moveDir -= rv end
			if controls.Right then moveDir += rv end

			moveDir = Vector3.new(moveDir.X, 0, moveDir.Z).Unit * flySpeed
			if moveDir.Magnitude == moveDir.Magnitude then
				hrp.Velocity = moveDir
			end
		end)
	else
		if flyConn then flyConn:Disconnect() end
		hum.PlatformStand = false
		hrp.Velocity = Vector3.zero
	end
end)

-- ƒêi·ªÅu khi·ªÉn ph√≠m bay
uis.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	local key = input.KeyCode
	if key == Enum.KeyCode.W then controls.Forward = true end
	if key == Enum.KeyCode.S then controls.Backward = true end
	if key == Enum.KeyCode.A then controls.Left = true end
	if key == Enum.KeyCode.D then controls.Right = true end
end)

uis.InputEnded:Connect(function(input, gpe)
	if gpe then return end
	local key = input.KeyCode
	if key == Enum.KeyCode.W then controls.Forward = false end
	if key == Enum.KeyCode.S then controls.Backward = false end
	if key == Enum.KeyCode.A then controls.Left = false end
	if key == Enum.KeyCode.D then controls.Right = false end
end)


-- C·∫≠p nh·∫≠t tab hi·ªÉn th·ªã
local function updateTab()
	for _, btn in ipairs(featureList:GetChildren()) do
		if btn:IsA("TextButton") then
			btn.Visible = currentTab == "Player"
		end
	end
end

playerTab.MouseButton1Click:Connect(function()
	currentTab = "Player"
	updateTab()
end)

worldTab.MouseButton1Click:Connect(function()
	currentTab = "World"
	updateTab()
end)

-- Toggle hi·ªÉn th·ªã menu
local menuOpen = false
toggleBtn.MouseButton1Click:Connect(function()
	menuOpen = not menuOpen
	menu.Visible = menuOpen
end)

-- Reset t√≠nh nƒÉng khi ch·∫øt
lp.CharacterAdded:Connect(function(char)
	char:WaitForChild("Humanoid").Died:Connect(function()
		for k in pairs(features) do
			features[k] = false
		end
		for _, btn in ipairs(featureList:GetChildren()) do
			if btn:IsA("TextButton") then
				btn.Text = "   " .. btn.Name .. ": ‚ùå"
			end
		end
	end)
end)

-- Kh·ªüi t·∫°o
updateTab()
