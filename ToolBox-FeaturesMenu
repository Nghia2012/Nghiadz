-- L·∫•y c√°c d·ªãch v·ª• c·∫ßn thi·∫øt
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local lp = Players.LocalPlayer -- Ng∆∞·ªùi ch∆°i hi·ªán t·∫°i
local guiParent = lp:WaitForChild("PlayerGui") -- GUI g·ªëc ƒë·ªÉ ch·ª©a ScreenGui

-- Xo√° GUI c≈© n·∫øu t·ªìn t·∫°i
if guiParent:FindFirstChild("CustomToolboxUI") then
	guiParent.CustomToolboxUI:Destroy()
end

-- T·∫°o m·ªôt ScreenGui m·ªõi
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CustomToolboxUI"
screenGui.ResetOnSpawn = false -- Kh√¥ng reset GUI khi respawn
screenGui.Parent = guiParent

-- Danh s√°ch c√°c t√≠nh nƒÉng v√† tr·∫°ng th√°i ban ƒë·∫ßu (t·∫Øt)
local features = {
	["Ragdoll"] = false,
	["Fling"] = false,
	["Speed x1.5"] = false,
	["Underground Stealth"] = false,
}

local defaultSpeed = 16 -- T·ªëc ƒë·ªô m·∫∑c ƒë·ªãnh c·ªßa ng∆∞·ªùi ch∆°i
local currentTab = "Player" -- Tab hi·ªán t·∫°i ƒë∆∞·ª£c hi·ªÉn th·ªã

-- T·∫°o n√∫t toggle menu (n√∫t m·ªü/ƒë√≥ng menu)
local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "MenuToggle"
toggleBtn.Text = "üõ†Ô∏è" -- Bi·ªÉu t∆∞·ª£ng n√∫t
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 18
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleBtn.BorderSizePixel = 0
toggleBtn.Size = UDim2.new(0, 50, 0, 50)
toggleBtn.Position = UDim2.new(0, 10, 0, 10)
toggleBtn.Active = true
toggleBtn.Draggable = true -- C√≥ th·ªÉ k√©o n√∫t n√†y
toggleBtn.ZIndex = 5
toggleBtn.Parent = screenGui
toggleBtn.AutoButtonColor = false
toggleBtn.ClipsDescendants = true

local uic = Instance.new("UICorner", toggleBtn) -- Bo g√≥c n√∫t
uic.CornerRadius = UDim.new(1, 0)

-- T·∫°o frame ch·ª©a to√†n b·ªô menu
local menu = Instance.new("Frame")
menu.Name = "MenuContainer"
menu.Size = UDim2.new(1, 0, 1, 0)
menu.Position = UDim2.new(0, 0, 0, 0)
menu.BackgroundTransparency = 1
menu.Visible = false -- ·∫®n khi m·ªõi kh·ªüi t·∫°o
menu.ZIndex = 4
menu.Parent = screenGui

-- T·∫°o danh s√°ch tab (Player/World)
local tabList = Instance.new("Frame")
tabList.Size = UDim2.new(0, 160, 1, 0)
tabList.Position = UDim2.new(0, 0, 0, 0)
tabList.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
tabList.BackgroundTransparency = 0.6
tabList.BorderSizePixel = 0
tabList.Parent = menu

local tabLayout = Instance.new("UIListLayout") -- T·ª± ƒë·ªông s·∫Øp x·∫øp n√∫t trong tab
tabLayout.Parent = tabList
tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabLayout.Padding = UDim.new(0, 8)

-- Tab: Player
local playerTab = Instance.new("TextButton")
playerTab.Size = UDim2.new(1, 0, 0, 40)
playerTab.Text = "Player"
playerTab.Font = Enum.Font.SourceSans
playerTab.TextSize = 18
playerTab.TextColor3 = Color3.new(1, 1, 1)
playerTab.BackgroundTransparency = 1
playerTab.BorderSizePixel = 0
playerTab.Name = "PlayerTab"
playerTab.Parent = tabList

-- ƒê∆∞·ªùng k·∫ª d∆∞·ªõi tab Player
local playerDivider = Instance.new("Frame")
playerDivider.Size = UDim2.new(1, 0, 0, 1)
playerDivider.BackgroundColor3 = Color3.new(1, 1, 1)
playerDivider.BackgroundTransparency = 0.6
playerDivider.BorderSizePixel = 0
playerDivider.Parent = tabList

-- Tab: World
local worldTab = Instance.new("TextButton")
worldTab.Size = UDim2.new(1, 0, 0, 40)
worldTab.Text = "World"
worldTab.Font = Enum.Font.SourceSans
worldTab.TextSize = 18
worldTab.TextColor3 = Color3.new(1, 1, 1)
worldTab.BackgroundTransparency = 1
worldTab.BorderSizePixel = 0
worldTab.Name = "WorldTab"
worldTab.Parent = tabList

-- ƒê∆∞·ªùng k·∫ª d∆∞·ªõi tab World
local worldDivider = Instance.new("Frame")
worldDivider.Size = UDim2.new(1, 0, 0, 1)
worldDivider.BackgroundColor3 = Color3.new(1, 1, 1)
worldDivider.BackgroundTransparency = 0.6
worldDivider.BorderSizePixel = 0
worldDivider.Parent = tabList

-- Khung ch·ª©a c√°c n√∫t t√≠nh nƒÉng
local featureList = Instance.new("Frame")
featureList.Size = UDim2.new(0, 160, 1, 0)
featureList.Position = UDim2.new(1, -160, 0, 0)
featureList.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
featureList.BackgroundTransparency = 0.6
featureList.BorderSizePixel = 0
featureList.Name = "FeatureList"
featureList.Parent = menu

-- T·∫°o kho·∫£ng c√°ch b√™n tr√°i v√† tr√™n cho c√°c n√∫t
local featurePadding = Instance.new("UIPadding")
featurePadding.PaddingLeft = UDim.new(0, 35) -- ƒê·∫©y sang ph·∫£i
featurePadding.PaddingTop = UDim.new(0, 15)  -- H·∫° th·∫•p xu·ªëng
featurePadding.Parent = featureList

-- T·ª± ƒë·ªông s·∫Øp x·∫øp c√°c n√∫t t√≠nh nƒÉng theo th·ª© t·ª±
local featureLayout = Instance.new("UIListLayout")
featureLayout.Parent = featureList
featureLayout.SortOrder = Enum.SortOrder.LayoutOrder
featureLayout.Padding = UDim.new(0, 10) -- Kho·∫£ng c√°ch gi·ªØa c√°c n√∫t
featureLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
featureLayout.VerticalAlignment = Enum.VerticalAlignment.Top

-- H√†m l·∫•y nh√¢n v·∫≠t ng∆∞·ªùi ch∆°i
local function getChar()
	return lp.Character or lp.CharacterAdded:Wait()
end

-- H√†m t·∫°o 1 n√∫t t√≠nh nƒÉng
local function makeBtn(name, order, callback)
	local btn = Instance.new("TextButton")
	btn.Name = name
	btn.Size = UDim2.new(1, -20, 0, 35) -- N√∫t r·ªông, c√°ch m√©p ph·∫£i 20px
	btn.LayoutOrder = order
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.BackgroundTransparency = 1
	btn.BorderSizePixel = 0
	btn.TextXAlignment = Enum.TextXAlignment.Left
	btn.Text = "   " .. name .. ": ‚ùå" -- C√≥ kho·∫£ng tr·∫Øng ƒë·∫ßu
	btn.Parent = featureList

	btn.MouseButton1Click:Connect(function()
		features[name] = not features[name] -- Toggle tr·∫°ng th√°i
		btn.Text = "   " .. name .. ": " .. (features[name] and "‚úÖ" or "‚ùå") -- ƒê·ªïi text
		callback(features[name]) -- G·ªçi logic x·ª≠ l√Ω
	end)
end

-- Logic: Ragdoll
makeBtn("Ragdoll", 1, function(on)
	local c = getChar()
	local hum = c:FindFirstChildOfClass("Humanoid")
	if not hum then return end
	if on then
		hum:ChangeState(Enum.HumanoidStateType.Physics)
		hum.PlatformStand = true
		for _, part in ipairs(c:GetChildren()) do
			if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
				part.Anchored = false
				part.CanCollide = true
			end
		end
	else
		hum:ChangeState(Enum.HumanoidStateType.GettingUp)
		hum.PlatformStand = false
		hum:Move(Vector3.zero, false)
	end
end)

-- Logic: Fling
local flingActive = false
makeBtn("Fling", 2, function(on)
	flingActive = on
	if flingActive then
		coroutine.wrap(function()
			local movel = 0.1
			while flingActive do
				RunService.Heartbeat:Wait()
				local hrp = getChar():FindFirstChild("HumanoidRootPart")
				if hrp then
					local vel = hrp.Velocity
					hrp.Velocity = vel * 10000 + Vector3.new(0, 10000, 0)
					RunService.RenderStepped:Wait()
					hrp.Velocity = vel
					RunService.Stepped:Wait()
					hrp.Velocity = vel + Vector3.new(0, movel, 0)
					movel = -movel -- ƒê·∫£o chi·ªÅu li√™n t·ª•c ƒë·ªÉ rung l·∫Øc
				end
			end
		end)()
	end
end)

-- Logic: TƒÉng t·ªëc ƒë·ªô ƒëi
makeBtn("Speed x1.5", 3, function(on)
	local hum = getChar():FindFirstChildOfClass("Humanoid")
	if hum then
		hum.WalkSpeed = on and defaultSpeed * 1.5 or defaultSpeed
	end
end)

local TweenService = game:GetService("TweenService")
local oldPos_Underground
local tween_Underground

makeBtn("Underground Stealth", 4, function(on)
	local char = getChar()
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	if on then
		oldPos_Underground = hrp.Position -- L∆∞u l·∫°i v·ªã tr√≠ g·ªëc

		-- T·∫°o tween xu·ªëng d∆∞·ªõi
		local targetCFrame = hrp.CFrame * CFrame.new(0, -10, 0)
		tween_Underground = TweenService:Create(hrp, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
			CFrame = targetCFrame
		})
		tween_Underground:Play()

		-- Sau tween 0.5s, anchor l·∫°i to√†n th√¢n
		task.delay(0.5, function()
			for _, part in pairs(char:GetDescendants()) do
				if part:IsA("BasePart") then
					part.Anchored = true
				end
			end
		end)
	else
		-- H·ªßy tween n·∫øu ƒëang ch·∫°y
		if tween_Underground then
			tween_Underground:Cancel()
		end

		-- M·ªü kh√≥a to√†n th√¢n
		for _, part in pairs(char:GetDescendants()) do
			if part:IsA("BasePart") then
				part.Anchored = false
			end
		end

		-- Tween tr·ªü l·∫°i v·ªã tr√≠ ban ƒë·∫ßu
		if oldPos_Underground then
			local backTween = TweenService:Create(hrp, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {
				CFrame = CFrame.new(oldPos_Underground)
			})
			backTween:Play()
		end
	end
end)

-- C·∫≠p nh·∫≠t c√°c n√∫t hi·ªÉn th·ªã theo tab hi·ªán t·∫°i
local function updateTab()
	for _, btn in ipairs(featureList:GetChildren()) do
		if btn:IsA("TextButton") then
			btn.Visible = currentTab == "Player" -- Hi·ªán n·∫øu ƒë√∫ng tab
		end
	end
end

-- Khi b·∫•m v√†o tab Player
playerTab.MouseButton1Click:Connect(function()
	currentTab = "Player"
	updateTab()
end)

-- Khi b·∫•m v√†o tab World
worldTab.MouseButton1Click:Connect(function()
	currentTab = "World"
	updateTab()
end)

-- B·∫≠t/t·∫Øt menu khi nh·∫•n n√∫t toggle
local menuOpen = false
toggleBtn.MouseButton1Click:Connect(function()
	menuOpen = not menuOpen
	menu.Visible = menuOpen
end)

-- Reset l·∫°i tr·∫°ng th√°i khi ng∆∞·ªùi ch∆°i ch·∫øt
lp.CharacterAdded:Connect(function(char)
	char:WaitForChild("Humanoid").Died:Connect(function()
		for k, _ in pairs(features) do
			features[k] = false
		end
		for _, btn in ipairs(featureList:GetChildren()) do
			if btn:IsA("TextButton") then
				btn.Text = "   " .. btn.Name .. ": ‚ùå"
			end
		end
	end)
end)

-- Kh·ªüi t·∫°o l·∫ßn ƒë·∫ßu tab Player
updateTab()
